name: Planning CLI - CI
run-name: Continuous Integration Pipeline Running!

on: push

env:
  CARGO_TERM_COLOR: always

jobs:
  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      # Checkout creates a copy of the repo in the runner, so code can be accessed
      - uses: actions/checkout@v2
      # Action specific for Rust, installs Rust toolchain and rustfmt with rustup
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt
      # Allows GitHub actions to run specific `cargo` commands
      # Runs a format check on cargo    
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      # Checkout creates a copy of the repo in the runner, so code can be accessed
      - name: Checkout repository
        uses: actions/checkout@v2
      # Action specific for Rust, installs Rust toolchain and clippy with rustup
      - run: rustup component add clippy
      # Rust specifict action
      # Lints code base and display warnings
      - name: Clippy check
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: -- -D warnings

